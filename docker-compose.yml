services:
    postgres:
        image: postgres:latest
        container_name: postgres
        environment: 
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        expose:
            - '5432:5432'
        volumes:
            - pg_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
            interval: 1s
            retries: 3 
            start_period: 3s
            timeout: 3s

    frontend:
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: ./Dockerfile
        expose:
            - "6901:6901"
        develop:
            watch:
                - action: sync
                  path: ./frontend
                  target: /frontend_src
                  ignore: 
                    - node_modules/

    backend:
        environment:
            - DATABASE_NAME=${DATABASE_NAME}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_PORT=${DATABASE_PORT}
            - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
            - DEBUG=${DEBUG}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
            - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
            - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
            - CSRF_COOKIE_SAMESITE=${CSRF_COOKIE_SAMESITE}
            - SESSION_COOKIE_SAMESITE=${SESSION_COOKIE_SAMESITE}
            - CSRF_COOKIE_HTTPONLY=${CSRF_COOKIE_HTTPONLY}
            - SESSION_COOKIE_HTTPONLY=${SESSION_COOKIE_HTTPONLY}
            - CSRF_COOKIE_SECURE=${CSRF_COOKIE_SECURE}
            - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE}
            - CORS_EXPOSE_HEADERS=${CORS_EXPOSE_HEADERS}
            - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
        container_name: backend
        build: 
            context: ./backend
            dockerfile: ./Dockerfile
        expose:
            - "6900:6900"
        depends_on:
            postgres:
                condition: service_healthy
        develop:
            watch:
                - action: sync
                  path: ./backend
                  target: /backend_src
        restart: unless-stopped

    nginx:
        container_name: nginx
        build: 
            context: ./nginx
            dockerfile: ./Dockerfile
        ports:
            - "1337:80"
        depends_on:
            - "backend"

volumes:
    pg_data:
